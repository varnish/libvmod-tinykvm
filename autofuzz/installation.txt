sudo yum install centos-release-scl
sudo yum-config-manager --enable rhel-server-rhscl-7-rpms
sudo yum install wget svn devtoolset-8
scl enable devtoolset-8 bash

mkdir -p ~/git
pushd ~/git

# CMake 3.12
mkdir -p cmake
pushd cmake
wget https://cmake.org/files/v3.12/cmake-3.12.3.tar.gz
tar zxvf cmake-3.*
cd cmake-3.*
./bootstrap --prefix=/usr/local
make -j4
make install
popd

# Clang-10 from trunk
# We should be in ~/git now
git clone https://github.com/fwsGonzo/build_llvm_trunk.git
pushd build_llvm_trunk
./retrieve_llvm.sh
# open build_llvm.sh in terminal and make sure make -jX is not too big
# this will take forever:
./build_llvm.sh
popd

# Create a symlink from clang-10 to clang++-10
pushd ~/llvm/install/bin
ln -s clang++ clang++-10
popd

# Add these to your .bashrc
export CC=clang-10
export CXX=clang++-10
export PATH=$PATH:$HOME/llvm/install/bin

# Optional: Install ninja
git clone https://github.com/ninja-build/ninja.git
pushd ninja
./bootstrap.py
sudo cp ninja /usr/local/bin
popd

# Creating the SSH config file
# git is very old on CentOS 7, so we will use ~/.ssh/config with mode 600
Host github.com
HostName github.com
IdentityFile /home/alf/.ssh/id_rsa
User alf

Host github-work
HostName github.com
IdentityFile /home/alf/.ssh/sec_rsa
User alf


# Now we can clone varnish_autoperf
git clone git@github-work:varnish/varnish_autoperf.git --recursive

# Building the actual fuzzer
pushd varnish_autoperf
# Prerequisites:
sudo yum install python3 openssl-devel libconfig-devel libedit-devel
# Some varnish generators depend on the Makefile, so we have to run configure:
sudo yum install automake libtool libcurl-devel libmhash-devel geoip-devel \
				libmemcached-devel libmaxminddb-devel python-docutils python-sphinx
pushd ext/varnish-cache-plus
./autogen.des
popd

# Now we can build the fuzzer
pushd autofuzz
./fuzzer.sh
popd

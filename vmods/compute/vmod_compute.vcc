$Module compute 3 "High-Performance Compute For Varnish Enterprise"

DESCRIPTION
===========

vmod_compute allows using libraries of sandboxed programs to
safely communicate with other systems, retrieve and transform data
without having to worry about security and integrity issues.
Programs are loaded as-needed and can be individually configured to
meet the specific needs of each Varnish cache server.

Each program provided by the library is ready-to-use, and will often
have one single purpose. Programs are documented on the Varnish Software
docs website and comes with a simple explanation of what it does, and
what JSON configuration should be provided to make the program perform
a given function.


LIBRARY
=======

A library defines a group of ready-to-use programs. Varnish Enterprise has
a list of officially supported programs, each of which solve a specific task.

Further, each program comes with a specific JSON configuration that allows
the VCL writer to tailor the program to his needs.

See http://compute.varnish-software.com for a list of official programs.

Example:
	sub vcl_init {
		new vafb = activedns.dns_group();
		vafb.set_host("filebin.varnish-software.com");
	}

	sub vcl_backend_fetch {
		set bereq.backend = compute.backend("avif",
			"https://${vafb}/images/" + bereq.url);
	}

	The avif program will fetch a JPEG file from a backend, transcode it to the
	AVIF image format, or if it fails, deliver the original JPEG instead. Then
	send it the requesting client(s). You can use any valid URL that can be
	fetched with cURL, such as FTP, HTTPS and local files.

	DNS configuration can be handled using ActiveDNS, and uses the ${name} string-
	interpolation method.


API
===

$Event vmod_event

$Function BOOL library(PRIV_VCL, STRING uri)

- Load library of programs that is pre-installed with Varnish Enterprise.
- All programs are retrieved, but are started only on-demand.
- Must be called from vcl_init.

$Function BOOL configure(PRIV_VCL, STRING program, STRING json)

- Provide a JSON configuration to override defaults to unstarted programs.
- Must be called from vcl_init.

$Function BOOL start(PRIV_VCL, STRING program, BOOL async = 1)

- Start program during early Varnish startup.
- When async, program intialization will not delay Varnish from starting up.
- Must be called from vcl_init.

$Function BACKEND program(PRIV_VCL, STRING program, STRING arg, STRING config = "")

- Returns a backend that will call the given program to produce a response.
- Supports GET and POST requests.
- Must be called from vcl_backend_fetch.

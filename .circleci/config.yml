version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01
    resource_class: medium
    steps:
      - add_ssh_keys:
          fingerprings:
            - "8c:f1:ee:44:31:65:44:8b:f9:21:ec:a9:10:1c:a0:d9"
            - "39:f5:32:fb:d2:93:4f:75:14:27:c3:c0:56:bd:f0:8c"
      - checkout
      - run:
          name: checkout tinykvm, varnish-cache-plus
          command: |
            GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa_8cf1ee443165448bf921eca9101ca0d9" git clone git@github.com:varnish/tinykvm.git vmods/kvm/tinykvm
            GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa_39f532fbd2934f751427c3c056bdf08c" git clone -b vmapi git@github.com:varnish/varnish-cache-plus.git ext/varnish-cache-plus
      - run: bash ./scripts/install_build_deps.sh
      - run: bash ./scripts/repo_setup.sh
      - run: bash ./scripts/cmaketool.sh --vcp=build --no-optimize --build
      - persist_to_workspace:
          root: .
          paths: build ext scripts vmods
  riscv_sandbox_tests:
      docker:
          - image: cimg/base:2022.03
      working_directory: ~/project
      steps:
          - attach_workspace:
              at: .
          - run:
              name: "Test dependencies"
              command: bash ./scripts/install_runtime_deps.sh
          - run:
              name: "RISC-V sandbox tests"
              working_directory: build
              command: "ctest --verbose -R vmod_riscv_ ."
  kvm_sandbox_tests:
      machine:
        image: ubuntu-2004:202107-02
        resource_class: varnish/fryer3
      working_directory: ~/project
      steps:
          - attach_workspace:
              at: .
          - run:
              name: "Test dependencies"
              command: bash ./scripts/install_runtime_deps.sh
          - run:
              name: "KVM sandbox tests"
              working_directory: build
              command: "ctest --verbose -R vmod_kvm_ ."
workflows:
  version: 2
  sledgehammer:
    jobs:
      - build
      - riscv_sandbox_tests:
          requires:
              - build
      # - kvm_sandbox_tests:
      #       requires:
      #           - cmake_builds

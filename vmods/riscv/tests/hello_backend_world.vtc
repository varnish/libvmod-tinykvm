varnishtest "RISC-V Hello World Backend"

shell {
cat >${tmpdir}/${testname}.cpp <<-EOF
#include "mini_api.hpp"

void start(int argc, char** argv)
{
	exit(0);
}

static const char mime[] = "text/plain";
static const char text[] = "Hello World";

void on_recv()
{
	forge(CACHED, [] {
		forge_response(mime, sizeof(mime)-1, text, sizeof(text)-1);
	});
	exit(0);
}
EOF
bash ${testdir}/build.sh ${tmpdir}/${testname}.cpp ${testdir} ${tmpdir}/${testname}
}

varnish v1 -vcl+backend {
vcl 4.1;
	import riscv;
	import std;

	backend default none;

	sub vcl_init {
		riscv.embed_tenants("""
			{
				"xpizza.com": {
					"filename": "${tmpdir}/${testname}",
					"group": "test"
				}
			}
		""");
	}

	sub vcl_recv {
		if (!riscv.fork(req.http.Host, req.http.X-Debug)) {
			return (synth(403));
		}

		/* Call into VM */
		riscv.vcall(ON_REQUEST);

		if (riscv.want_result() == "backend") {
			set req.http.X-Backend-Func = riscv.result_value(1);
			set req.http.X-Backend-Arg  = riscv.result_value(2);
			if (riscv.result_value(0) == 0) {
				return (pass);
			} else {
				return (hash);
			}
		}

		return (synth(400));
	}

	sub vcl_backend_fetch {
		if (riscv.fork(bereq.http.Host, bereq.http.X-Debug)) {
			riscv.vcall(ON_BACKEND_FETCH);
			if (bereq.http.X-Backend-Func) {
				set bereq.backend = riscv.vm_backend(
						bereq.http.X-Backend-Func,
						bereq.http.X-Backend-Arg);
			}
		}
	}
} -start

client c1 {
	txreq -url "/" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Hello World"
	expect resp.status == 200
	txreq -url "/" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Hello World"
	expect resp.status == 200
} -run

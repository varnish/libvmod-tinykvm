varnishtest "RISC-V Hello World Synth"

shell {
cat >${tmpdir}/${testname}.cpp <<-EOF
#include "mini_api.hpp"

void start(int argc, char** argv)
{
	exit(0);
}

static const char reason[] = "synth";

void on_recv()
{
	decision(reason, sizeof(reason)-1, 404);
}

static const char mime[] = "text/plain";
static const char text[] = "Hello World";

void on_synth()
{
	synth(mime, sizeof(mime)-1, text, sizeof(text)-1);
}
EOF
bash ${testdir}/build.sh ${tmpdir}/${testname}.cpp ${testdir} ${tmpdir}/${testname}
}

varnish v1 -vcl+backend {
vcl 4.1;
	import riscv;
	import std;

	backend default none;

	sub vcl_init {
		riscv.embed_tenants("""
			{
				"xpizza.com": {
					"filename": "${tmpdir}/${testname}",
					"group": "test"
				}
			}
		""");
	}

	sub vcl_recv {
		if (!riscv.fork(req.http.Host, req.http.X-Debug)) {
			return (synth(403));
		}

		/* Call into VM */
		riscv.vcall(ON_REQUEST);

		if (riscv.want_result() == "synth") {
			return (synth(riscv.want_status()));
		}

		return (synth(400));
	}
	sub vcl_synth {
		if (riscv.active()) {
			riscv.vcall(ON_SYNTH);
			return (deliver);
		}
	}
} -start

client c1 {
	txreq -url "/" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Hello World"
	expect resp.status == 404
	txreq -url "/" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Hello World"
	expect resp.status == 404
} -run

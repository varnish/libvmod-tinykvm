$Module riscv 3 "RISC-V emulation VMOD"

DESCRIPTION
===========

vmod_riscv allows executing 32-bit RISC-V binaries and returns their output.

API
===

$Function STRING exec(HTTP req, INT max_instructions, BLOB elf)

Execute the given ELF binary, running its main function to completion or runs out of instructions limited by max_instructions. This will also initialize the machine, and may call destructors before exiting.

- All measurements are stored in several HTTP header fields
- Errors are stored in a X-Exception header field.
- If an error occurs the return value is null (empty).
- On success the machine output is returned.

$Object backend(INT max_instructions = 2000000, STRANDS arguments = 0)

$Method BACKEND .from_body()


$Object machine(INT max_instructions = 2000000, STRING filename, STRANDS args = 0)

- Create machine that is initialized immediately
- Arguments are passed into the main() function

$Method INT     .call(STRING function)

- Call into a new virtual machine cloned from the previously
  prepared machine, using copy-on-write mechanics.

$Method INT     .call_known(INT idx)

- Call a known function (on_client_request etc.) in a new virtual machine
  cloned from the previously prepared machine, using copy-on-write mechanics.


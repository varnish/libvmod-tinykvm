varnishtest "KVM Backend: Basic Hello World test"

shell {
cat >${tmpdir}/${testname}.c <<-EOF
#include <stdio.h>
#include <string.h>
#include "kvm_api.h"

static void on_recv(const char *arg)
{
	if (strcmp(arg, "/") == 0)
		backend_response_str(200, "text/plain", "Hello World");
	else
		backend_response_str(404, "text/plain", "Not Found");
}

int main(int argc, char **argv)
{
	printf("Hello from %s!\n", argv[1]);
	set_on_recv(on_recv);
	wait_for_requests();
}
EOF
gcc -static -O2 ${tmpdir}/${testname}.c -I${testdir} -o ${tmpdir}/${testname}
}

varnish v1 -vcl+backend {
vcl 4.1;
	import kvm;

	backend default none;

	sub vcl_init {
		kvm.embed_tenants("""
			{
				"xpizza.com": {
					"filename": "${tmpdir}/${testname}",
					"key": "",
					"group": "test"
				}
			}
		""");
	}

	sub vcl_recv {
		return (synth(
			kvm.vm_callv(req.http.Host, ON_REQUEST, req.url)
		));
	}

	sub vcl_synth {
		if (resp.status == 200) {
			kvm.vm_synth();
			return (deliver);
		}
	}
} -start

client c1 {
	txreq -url "/" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Hello World"
	expect resp.status == 200
	txreq -url "/" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Hello World"
	expect resp.status == 200
	txreq -url "/hmm" -hdr "Host: xpizza.com"
	rxresp
	expect resp.status == 404
} -run

varnishtest "RISC-V Hello World Backend"

shell {
cat >${tmpdir}/${testname}.cpp <<-EOF
#include "riscv_api.hpp"

static void
on_recv(const char* url, int req, int resp) {
	if (strcmp(url, "/1") == 0)
	{
		forge(CACHED, [] {
			static const char mime[] = "text/plain";
			static const char text[] = "Hello World";
			sys_response(200, mime, sizeof(mime)-1, text, sizeof(text)-1);
		});
	} else if (strcmp(url, "/2") == 0) {
		forge(CACHED, [] {
			static const char mime[] = "text/plain";
			static const char text[] = "Not found";
			sys_response(404, mime, sizeof(mime)-1, text, sizeof(text)-1);
		});
	} else {
		forge(CACHED, [] {
			static const char mime[] = "text/plain";
			static const char text[] = "Server error";
			sys_response(500, mime, sizeof(mime)-1, text, sizeof(text)-1);
		});
	}
}

void start(int argc, char** argv) {
	wait_for_requests(on_recv);
}
EOF
bash ${testdir}/build.sh ${tmpdir}/${testname}.cpp ${testdir} ${tmpdir}/${testname}
}

varnish v1 -vcl+backend {
	vcl 4.1;
	import riscv;

	backend default none;

	sub vcl_init {
		riscv.embed_tenants("""{
			"xpizza.com": {
				"filename": "${tmpdir}/${testname}",
				"group": "test"
			}
		}""");
	}

	sub vcl_recv {
		if (!riscv.fork(req.http.Host, req.http.X-Debug)) {
			return (synth(403));
		}

		/* Call into VM */
		riscv.vcall(ON_REQUEST, req.url);

		if (riscv.want_result() == "backend") {
			set req.http.X-Backend-Func = riscv.result_value(1);
			set req.http.X-Backend-Arg  = riscv.result_value(2);
			if (riscv.result_value(0) == 0) {
				return (pass);
			} else {
				return (hash);
			}
		}

		return (synth(400));
	}

	sub vcl_backend_fetch {
		if (riscv.fork(bereq.http.Host, bereq.http.X-Debug)) {
			riscv.vcall(ON_BACKEND_FETCH);
			if (bereq.http.X-Backend-Func) {
				set bereq.backend = riscv.vm_backend(
						bereq.http.X-Backend-Func,
						bereq.http.X-Backend-Arg);
			}
		}
	}
} -start

client c1 {
	txreq -url "/1" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Hello World"
	expect resp.status == 200
	txreq -url "/2" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Not found"
	expect resp.status == 404
	txreq -url "/1234" -hdr "Host: xpizza.com"
	rxresp
	expect resp.status == 500
} -run

varnishtest "KVM Backend: Verify that status codes work"

shell {
cat >${tmpdir}/${testname}.c <<-EOF
#include <string.h>
#include "kvm_api.h"

int main() {}

__attribute__((used))
extern void my_backend(const char *arg)
{
	if (strcmp(arg, "/my_backend") == 0) {
		backend_response_str(404, "text/plain", "Not found");
	}
	else if (strcmp(arg, "/my_admin") == 0) {
		backend_response_str(403, "text/plain", "Forbidden");
	}
	backend_response_str(401, "text/plain", "Unauthorized");
}
EOF
gcc -static -O2 ${tmpdir}/${testname}.c -I${testdir} -o ${tmpdir}/${testname}
}

varnish v1 -vcl+backend {
vcl 4.1;
	import kvm;

	backend default none;

	sub vcl_init {
		kvm.embed_tenants("""
			{
				"xpizza.com": {
					"filename": "${tmpdir}/${testname}",
					"key": "",
					"group": "test"
				}
			}
		""");
	}

	sub vcl_recv {
		return (pass);
	}

	sub vcl_backend_fetch {
		set bereq.backend = kvm.vm_backend(
				bereq.http.Host,
				"my_backend",
				bereq.url);
	}
} -start

client c1 {
	txreq -url "/my_backend" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Not found"
	expect resp.status == 404
	txreq -url "/my_admin" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "Forbidden"
	expect resp.status == 403
} -run

varnishtest "Test headerplus.split/count()"

varnish v1 -vcl+backend {
	import headerplus;
	import std;

	backend default none;

	sub vcl_recv {
		return (synth(200));
	}

	sub vcl_synth {
		headerplus.init(req);
		headerplus.add("test", "inside");
		set resp.http.count_b4 = headerplus.count("test");
		if (!req.http.delim) {
			set req.http.delim = ", ";
		}
		headerplus.split("test", req.http.delim);
		set resp.http.count_af = headerplus.count("test");
		headerplus.write();
	}

} -start

logexpect l1 -v v1 {
	expect *	1001 	ReqUnset  	"test: a, b, c, d,e,f,g"
	expect 0	= 	ReqHeader 	"test: a"
	expect 0	= 	ReqHeader 	"test: b"
	expect 0	= 	ReqHeader 	"test: c"
	expect 0	= 	ReqHeader 	"test: d"
	expect 0	= 	ReqHeader 	"test: e"
	expect 0	= 	ReqHeader 	"test: f"
	expect 0	= 	ReqHeader 	"test: g"
	expect 0	= 	ReqHeader 	"test: inside"

	expect *	1002 	ReqUnset  	"test: c1=v1; c2=v2"
	expect 0	= 	ReqHeader 	"test: c1=v1"
	expect 0	= 	ReqHeader 	"test: c2=v2"
	expect 0	= 	ReqHeader 	"test: inside"

	expect *	1003 	ReqUnset  	"test: a"
	expect 0	= 	ReqHeader 	"test: a"
	expect 0	= 	ReqHeader 	"test: inside"

	expect *	1004 	ReqUnset  	"test: a,"
	expect 0	= 	ReqHeader 	"test: a"
	expect 0	= 	ReqHeader 	"test: inside"
} -start

client c1 {
	txreq -hdr "test: a, b, c, d,e,f,g"
	rxresp
	expect resp.http.count_b4 == 2
	expect resp.http.count_af == 8

	txreq -hdr "test: c1=v1; c2=v2" -hdr "delim: ; "
	rxresp
	expect resp.http.count_b4 == 2
	expect resp.http.count_af == 3

	txreq -hdr "test: a"
	rxresp
	expect resp.http.count_b4 == 2
	expect resp.http.count_af == 2

	txreq -hdr "test: a,  "
	rxresp
	expect resp.http.count_b4 == 2
	expect resp.http.count_af == 2
} -run

logexpect l1 -wait

$Module compute 3 "High-Performance Compute For Varnish Enterprise"

DESCRIPTION
===========

vmod_compute allows using a library of sandboxed programs to
safely transform data without having to worry about security
issues.

Each program provided by the library are ready-to-use. Each
program has a specific purpose and comes with a simple explanation
of what it does, and what JSON configuration should be provided
to make the program perform a given function.


LIBRARY
=======

A library defines a group of ready-to-use programs. Varnish Enterprise has
a list of officially supported programs, each of which solve a specific task.

Further, each programs comes with a specific JSON configuration that allows
the VCL writer to tailor the program to his needs.

See http://programs.varnish-software.com for a list of official programs.

Example:
	set bereq.backend = compute.backend("jpeg_to_avif",
		"https://backend2.myorg.co.uk/assets/" + bereq.url);

	The jpeg_to_avif program will transcode a valid JPEG to AVIF, or if it fails,
	deliver the original JPEG instead. The program will fetch the image from the
	argument URL, and then transcode it.

	The JSON configuration for each officially supported program uses a common
	scheme between all programs in order to make advanced DNS configuration easy.
	Each parameter in the DNS configuration is named and works exactly like in
	vmod_goto, and uses the same source for DNS.


API
===

$Event vmod_event

$Function BOOL library(PRIV_VCL, STRING uri)

- Load library of programs that is pre-installed with Varnish Enterprise.

$Function BOOL start(PRIV_VCL, STRING program, BOOL async = 1)

- Fetch and start program during early Varnish startup.
- When async, program intialization will not delay Varnish from starting up.

$Function BACKEND backend(PRIV_VCL, STRING program, STRING arg, STRING json_config = "{}")

- Returns a backend that will call the given program to produce a response.
- Supports GET and POST requests.

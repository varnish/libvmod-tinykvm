varnishtest "Skip request/response"

server s1 {
	rxreq
	txresp

	rxreq
	txresp -hdr "Forbidden: foo"

	expect_close
	accept

	rxreq
	txresp -hdr "Forbidden: foo"

	rxreq
	txresp -hdr "Forbidden: foo"

} -start

varnish v1 -arg "-p thread_pool_stack=92k" -vcl+backend {
	include "${pwd}/waf.vcl";

	sub vcl_init {
		varnish_waf.add_files("${testdir}/test.conf");
	}

	sub vcl_recv {
		set req.http.waf-skip = req.http.skip;
	}

} -start

logexpect l1 -v v1 -g request {
	expect 	* * 	VCL_call	{BACKEND_FETCH}
	expect 	* * 	WAF		{^ReqHeaders: \d*$}
	expect 	* * 	WAF		{^ReqBody: \d*$}
	expect 	* * 	WAF		{LOG:}
	expect 	* * 	VCL_return	{error}

	expect 	* * 	VCL_call	{BACKEND_RESPONSE}
	expect 	* * 	WAF		{^RespHeaders: \d*$}
	expect 	* * 	WAF		{^RespBody: \d*$}

	expect 	* * 	VCL_call	{BACKEND_RESPONSE}
	expect 	* * 	WAF		{^RespHeaders: \d*$}
	expect 	* * 	WAF		{LOG:}
	expect 	* * 	BerespStatus	{503}

	expect 	* * 	VCL_call	{BACKEND_FETCH}
	expect 	* * 	WAF		{^ReqHeaders: \d*$}
	expect 	* * 	WAF		{^ReqBody: \d*$}

	expect 	* * 	VCL_call	{BACKEND_FETCH}
	expect 	* * 	WAF		{^ReqHeaders: \d*$}
	expect 	* * 	WAF		{^ReqBody: \d*$}
	expect 	* * 	WAF		{LOG:}
	expect 	* * 	VCL_return	{error}

} -start


client c1 {
	# Only check request headers/body (doesn't hit backend)
	txreq -url /1 -hdr "skip: response" -body "attack"
	rxresp
	expect resp.status == 404
	expect resp.bodylen == 0

	# Only Check response headers/body (hits backend)
	txreq -url /2 -hdr "skip: request" -body "attack"
	rxresp
	expect resp.status == 200

	# Only Check response headers/body (hits backend)
	txreq -url /3 -hdr "skip: request" -body "attack"
	rxresp
	expect resp.status == 503
	expect resp.bodylen == 0

	# Only check request headers/body (hits backend)
	txreq -url /4 -hdr "skip: response"
	rxresp
	expect resp.status == 200

	# skip all (hits backend)
	txreq -url /5 -hdr "skip: true" -body "attack"
	rxresp
	expect resp.status == 200

	# dont skip anything (doesn't hit backend)
	txreq -url /6 -body "attack"
	rxresp
	expect resp.status == 404
	expect resp.bodylen == 0
} -run

logexpect l1 -wait

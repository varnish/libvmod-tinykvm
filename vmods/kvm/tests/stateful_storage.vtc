varnishtest "KVM Backend: Basic live update test"

shell {
cat >${tmpdir}/${testname}.c <<-EOF
#include <string.h>
#include "kvm_api.h"

static int counter = 0;
static void my_storage()
{
	counter ++;
	storage_return_nothing();
}

static void my_backend(char *arg)
{
	storage_call0(my_storage);

	arg[11] = '0' + (counter % 10);

	const char ctype[] = "text/plain";
	backend_response(200, ctype, sizeof(ctype)-1, arg, strlen(arg));
}

int main()
{
	// With this enabled we can see the global memory of
	// the storage VM without copying data out.
	make_storage_memory_shared();

	set_backend_get(my_backend);
	wait_for_requests();
}
EOF
gcc -static -O2 ${tmpdir}/${testname}.c -I${testdir} -o ${tmpdir}/${testname}
}

varnish v1 -vcl+backend {
vcl 4.1;
	import kvm;

	backend default none;

	sub vcl_init {
		kvm.embed_tenants("""{
			"xpizza.com": {
				"filename": "${tmpdir}/${testname}",
				"key": "",
				"group": "test"
			}
		}""");
	}

	sub vcl_recv {
		return (pass);
	}

	sub vcl_backend_fetch {
		set bereq.backend = kvm.vm_backend(
				bereq.http.Host,
				bereq.url);
	}
} -start

client c1 {
	txreq -url "/helloworldZ" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "/helloworld1"
	expect resp.status == 200
	txreq -url "/helloworldZ" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "/helloworld2"
	expect resp.status == 200
	txreq -url "/helloworldZ" -hdr "Host: xpizza.com"
	rxresp
	expect resp.body == "/helloworld3"
	expect resp.status == 200
} -run
